/*
*
* Generic
* ---------------------
*
* These are the styles for generic shortcode elements
*
*/

/**
 * TODO @alexandrosraikos: Implement CSS updates (#134)
 */

:root {
  --policyms-text-color: #111111;
  --policyms-text-color-secondary: #464646;
  --policyms-text-color-invert: #f0f0f0;
  --policyms-text-color-invert-secondary: #c2c2c2;
  --policyms-highlight-color-dark: #03204a;
  --policyms-highlight-color-mid: #3570d6;
  --policyms-highlight-color-light: #00bdf5;
  --policyms-border-color-light: rgba(0, 0, 0, 0.1);
  --policyms-background-color: rgba(253, 253, 253);
  --policyms-background-notice: var(--policyms-highlight-color-mid);
  --policyms-background-notice-outline: var(--policyms-highlight-color-mid);
  --policyms-background-failure: #e73d3d;
  --policyms-background-failure-outline: #e73d3d;
  --policyms-background-warning: #fffce8;
  --policyms-background-warning-outline: #dfaf2b;
  --policyms-star-color: #dfaf2b;
  --policyms-background-success: #cdf7bf;
  --policyms-background-success-outline: #358d18;
}

/* Links & buttons */

.policyms {
  margin: 0 auto;
}

.policyms hr {
  margin: 0;
  border: none;
  height: 1px;
  background-color: var(--policyms-border-color-light);
}

.policyms a {
  display: inline !important;
  margin: 0;
  text-decoration: none !important;
  font-size: inherit;
  font-weight: bold;
  color: var(--policyms-text-color);
  transition: color 0.2s ease-in-out;
}

.policyms button {
  font-weight: normal;
}

.policyms a.underline {
  text-decoration: underline !important;
}

.policyms a:hover {
  text-decoration: none !important;
  display: inline;
  color: var(--policyms-highlight-color-mid);
  cursor: pointer !important;
  transition: color 0.2s ease-in-out;
}

.policyms button.action,
.policyms a.action,
.policyms button.pill.active {
  padding: 2px 16px;
  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.2);
  border-radius: 6px;
  background: rgb(99, 156, 255) !important;
  background: linear-gradient(
    307deg,
    rgba(99, 156, 255, 1) 0%,
    rgba(53, 112, 214, 1) 99%
  ) !important;
  color: var(--policyms-text-color-invert) !important;
  transition: all 0.2s ease-in-out;
  font-weight: bold;
  font-size: 12pt;
}

.policyms a.action.small,
.policyms button.action.small {
  /* TODO: Make description edit button `prominent` as well. */
  padding: 5px 10px;
  border: none;
  color: white;
  font-size: 80% !important;
  font-weight: bold;
  text-decoration: none;
  border-radius: 10px;
  transition: all 0.2s ease-in-out;
}

.policyms a.action.small {
  white-space: nowrap;
}

.policyms a.action.small img,
.policyms button.action.small img {
  display: inline-block;
  max-width: 15px;
  margin: -3px 5px 0 0;
}
.policyms button.action.minimal {
  padding: 0;
  border: none;
  border-radius: 0;
  background: none !important;
  color: var(--policyms-text-color) !important;
  font-weight: 500;
  transition: all 0.2s ease-in-out;
  box-shadow: none;
}

.policyms button.action.destructive {
  background-color: var(--policyms-background-failure) !important;
  border-color: var(--policyms-background-failure-outline);
  color: var(--policyms-text-color-invert) !important;
}
.policyms button.action.minimal.destructive {
  background-color: transparent !important;
  border: none;
  color: var(--policyms-background-failure) !important;
}

.policyms button.action.productive {
  background-color: var(--policyms-background-success) !important;
  border-color: var(--policyms-background-success-outline);
  color: var(--policyms-text-color-invert) !important;
}

.policyms button.action:hover,
.policyms a.action:hover {
  opacity: 1;
  cursor: pointer;
  transform: scale(0.99);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  transition: all 0.2s ease-in-out;
}

.policyms button.action:active,
.policyms a.action:active {
  opacity: 1;
  transform: scale(0.97);
  box-shadow: 0 1px 0px rgba(0, 0, 0, 0.3);
  transition: all 0.1s ease-in-out;
}

.policyms button.action.minimal:hover,
.policyms button.action.minimal:active {
  box-shadow: none;
}

.policyms .loading {
  opacity: 0.6;
  cursor: wait;
  pointer-events: none;
}

.policyms button.tactile,
.policyms a.tactile {
  display: block;
  text-align: left;
  background-color: transparent !important;
  padding: 10px 8px;
  margin: 3px 0;
  color: inherit !important;
  border: none;
  border-radius: 8px;
  text-transform: none;
  transition: all 0.2s ease-in-out;
}

.policyms button.tactile.destructive,
.policyms a.tactile.destructive {
  color: var(--policyms-background-failure) !important;
}

.policyms button.tactile:hover,
.policyms a.tactile:hover {
  transform: scale(0.98);
  background-color: rgba(0, 0, 0, 0.05) !important;
  transition: all 0.2s ease-in-out;
  text-decoration: none;
}

.policyms button.tactile.active,
.policyms button.tactile:active,
.policyms a.tactile.active,
.policyms a.tactile:active {
  transform: scale(0.96);
  background-color: rgba(0, 0, 0, 0.1) !important;
  transition: all 0.1s ease-in-out;
}

.policyms button.outlined {
  padding: 4px 16px;
  margin: 0 5px 5px 0;
  background: transparent !important;
  font-size: 100%;
  border: 2px solid rgba(0, 0, 0, 0.5);
  border-radius: 8px;
  text-decoration: none;
  color: inherit !important;
  text-transform: unset;
  transition: all 0.2s ease-in-out;
}

.policyms button.outlined:hover {
  text-decoration: none;
  border: 2px solid rgba(0, 0, 0, 0.3);
  background-color: rgba(0, 0, 0, 0.15) !important;
  opacity: 0.9;
  transform: scale(0.99);
  transition: all 0.2s ease-in-out;
}

.policyms button.outlined.active,
.policyms button.outlined:active {
  text-decoration: none;
  border: 2px solid rgba(0, 0, 0, 0.3);
  background-color: rgba(0, 0, 0, 0.25) !important;
  opacity: 0.8;
  transform: scale(0.97);
  transition: all 0.1s ease-in-out;
}

.policyms .pill {
  display: inline-block !important;
  font-weight: bold;
  color: var(--policyms-text-color);
  padding: 4px 14px;
  background: var(--policyms-border-color-light);
  background: linear-gradient(
    25deg,
    var(--policyms-border-color-light) 0%,
    rgba(255, 255, 255, 0) 99%
  );
  border-radius: 100px !important;
  transition: all 0.2s;
}

.policyms button.pill:hover {
  transform: scale(0.98);
  transition: all 0.2s;
}

.policyms button.pill:active {
  transform: scale(0.96);
  transition: all 0.2s;
}

.policyms .pill.small {
  font-weight: 10pt;
  padding: 1px 10px;
}

.policyms h1 {
  /* Other */
  font-size: 40px;
  font-weight: bold;
}

.policyms h2 {
  /* Other */
  font-size: 28px;
  font-weight: bold;
}

.policyms h3 {
  margin-bottom: 10px;

  /* Other */
  font-size: 22px;
  font-weight: bold;
}

.policyms h4 {
  /* Other */
  font-size: 20px;
  font-weight: 500;
}

.policyms p {
  line-height: 1.5;
  margin-bottom: 20px;
}

.policyms p.discreet {
  margin: 0;
  padding: 0;
  font-size: 80%;
  color: var(--policyms-text-color-secondary);
}

.policyms span.label {
  background-color: var(--policyms-background-notice);
  border-radius: 100px;
  font-size: 12px;
  font-weight: 600;
  display: inline-block !important;
  padding: 0 10px;
  border: 1px solid var(--policyms-background-notice-outline);
  color: var(--policyms-text-color-invert);
}

.policyms span.label.success {
  background-color: var(--policyms-background-success);
  color: var(--policyms-text-color-invert);
  border: 1px solid var(--policyms-background-success-outline);
}

/* Pagination */

.policyms nav.pagination {
  text-align: center;
}

.policyms nav.pagination button {
  border: none;
  border-radius: 5px;
  padding: 0 8px;
  margin: 0 2px;
  background: transparent !important;
  color: inherit !important;
  font-size: 16px;
  transition: all 0.1s ease-in-out;
}

.policyms nav.pagination button:hover {
  background: rgba(0, 0, 0, 0.05) !important;
  transition: all 0.1s ease-in-out;
}

.policyms nav.pagination button:active {
  transform: scale(0.98);
  opacity: 0.5;
  transition: all 0.1s ease-in-out;
}

.policyms nav.pagination button.active {
  font-weight: bold;
  background: rgba(0, 0, 0, 0.05) !important;
}

.policyms *[status="approved"] {
  background-color: var(--policyms-background-success);
  color: var(--policyms-background-success-outline);
}

/**
* Forms
* -----------
* Generic forms styling.
*/

.policyms form {
  margin: 0 auto 20px auto;
  padding: 0;
}

.policyms form fieldset {
  border: none;
  padding: 10px 0;
  margin: 0 auto 20px 0;
}

.policyms form fieldset > * {
  margin-bottom: 20px;
}

.policyms form input[type="text"],
.policyms form input[type="number"],
.policyms form input[type="email"],
.policyms form input[type="password"],
.policyms form input[type="tel"],
.policyms form textarea {
  display: block;
  margin: 0 auto 10px auto;
  width: 100%;
  box-sizing: border-box;
}

.policyms form input[type="checkbox"] {
  position: relative;
  -moz-appearance: none;
  appearance: none;
  -webkit-appearance: none;
  outline: none;
  width: 50px;
  height: 30px;
  margin: 10px 7px 10px 0;
  background-color: #ffffff;
  border: var(--border-thin);
  border-radius: 50px;
  -webkit-box-shadow: inset -20px 0 0 0 var(--policyms-background-color);
  box-shadow: inset -20px 0 0 0 var(--policyms-background-color);
  -webkit-transition-duration: 200ms;
  -o-transition-duration: 200ms;
  transition-duration: 200ms;
}

.policyms form input[type="checkbox"]:hover {
  cursor: pointer;
}

.policyms form input[type="checkbox"]::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 30px;
  height: 30px;
  background-color: transparent;
  border-radius: 50%;
  -webkit-box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
  -webkit-transition: all 0.2s ease-in-out;
  -o-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
}

.policyms form input[type="checkbox"]:checked {
  border-color: var(--policyms-highlight-color-mid);
  -webkit-box-shadow: inset 20px 0 0 0 var(--policyms-highlight-color-mid);
  box-shadow: inset 20px 0 0 0 var(--policyms-highlight-color-mid);
  -webkit-transition-duration: 200ms;
  -o-transition-duration: 200ms;
  transition-duration: 200ms;
}

.policyms form input[type="checkbox"]:checked::after {
  left: 20px;
  -webkit-box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
  -webkit-transition: all 0.2s ease-in-out;
  -o-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
}

.policyms form label {
  display: block;
  color: var(--policyms-text-color-secondary);
  margin: 10px 0 5px 0;
  padding: 0;
  font-size: 11pt;
}

.policyms
  form
  input:not(input[type="file"], input[type="checkbox"], input[type="radio"]),
.policyms form textarea,
.policyms form select {
  display: block;
  padding: 10px 21px 10px 14px;
  margin: 0 0 10px 0;
  background-color: #ffffff;
  border: 1px solid var(--policyms-border-color-light) !important;
  border-radius: 10px;
  min-width: 70px;
}

.policyms form select {
  padding: 10px;
  padding-right: 30px;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  background-image: url("data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E");
  background-repeat: no-repeat, repeat;
  background-position: right 1em top 50%, 0 0;
  background-size: 0.65em auto, 100%;
}

.policyms form select:hover {
  cursor: pointer;
  background-color: #ececec;
}

.policyms form button[type="submit"] {
  margin: 10px 0;
}

.policyms form .actions {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 10px;
}

.policyms form .actions.align-end {
  justify-content: flex-end;
}

.policyms form .actions button {
  margin: 10px;
}

/* Locked content */
.policyms-locked-content {
  min-height: 300px;
  display: flex;
  width: 100%;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: var(--policyms-border-color-light);
  border-radius: 12px;
}

.policyms-locked-content > img {
  margin-bottom: 10px;
  width: 60px;
}

.policyms-locked-content > p {
  margin-top: 10px;
  text-align: center;
  width: 80%;
}

/**
* Header search box
* -----------
* Style the inline menu bar search box.
*/

/**
 * The menu search button container.
 */
.policyms.policyms-menu-search {
  margin: 0;
  margin-top: -6px;
}

/**
 * The menu search button.
 */
.policyms.policyms-menu-search > button[data-action="description-search"] {
  padding: 3px 6px;
  color: inherit;
}

/**
 * The menu search modal container.
 */
.policyms-modal .policyms-menu-search {
  margin: 10px;
}

/**
 * The menu search modal form.
 */
.policyms-modal .policyms-menu-search > form {
  display: flex !important;
  justify-content: center;
  align-items: center;
}

/**
 * The menu search modal text field.
 */
.policyms-modal .policyms-menu-search > form input {
  margin: 10px !important;
  min-width: 50vw;
  background-color: transparent !important;
  color: inherit !important;
}

/**
 * The menu search modal form button.
 */
.policyms-modal .policyms-menu-search > form > button[type="submit"] {
  width: 36px;
  height: 36px;
  padding: 0 !important;
  text-align: center;
}

/**
* Modal
* -----------
* Dynamically display a modal.
*/

/**
* Don't display modalized content
* when echoed by PHP.
*
* Hint: Use HTML class `modalize` on PHP echo.
*/
.policyms .modalize {
  /* Display & Box Model */
  display: none;
}

/**
* Display content when added to modal.
*/
.policyms .modalize,
.policyms-modal .content > * {
  /* Display & Box Model */
  display: block;
}

/**
* The modal's root positioning
* which covers the page.
*/
.policyms-modal {
  /* Positioning */
  position: fixed;
  z-index: 500;
  top: 0;
  left: 0;

  /* Display & Box Model */
  display: block;
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;

  /* Other */
  animation: fade-in 0.2s ease-in-out forwards;
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/**
* The modal's dark backdrop.
*/
.policyms-modal > .backdrop {
  /* Positioning */
  position: absolute;
  z-index: 550;
  top: 0;
  left: 0;

  /* Display & Box Model */
  width: 100vw;
  height: 100vh;

  /* Other */
  background-color: rgba(0, 0, 0, 0.5);
  content: " ";
  cursor: pointer;
}

/**
* The common modal control attributes.
*/
.policyms-modal > .close,
.policyms-modal > .container > .previous,
.policyms-modal > .container > .next {
  /* Positioning */
  z-index: 600 !important;
  position: absolute !important;

  /* Display & Box Model */
  width: 40px !important;
  height: 40px !important;
  padding: 0 !important;

  /* Other */
  text-align: center !important;
  vertical-align: middle !important;
  color: white !important;
}

/**
* The modal's "close" button position.
*/
.policyms-modal > .close {
  /* Positioning */
  position: relative;
  top: 20px;
  right: 20px;
}

/**
* The modal's centered content container.
*/
.policyms-modal > .container {
  /* Positioning */
  position: fixed;
  top: 50%;
  left: 50%;
  z-index: 600;

  /* Display & Box Model */
  width: auto;
  max-width: 60vw;
  min-height: 50px;
  /* box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);*/

  /* Other */
  transform: translate(-50%, calc(-50% - 0.5px));
}

/**
* The modal's iterable controls positions.
*/
.policyms-modal > .container > .previous,
.policyms-modal > .container > .next {
  /* Positioning */
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.policyms-modal > .container > .previous {
  /* Positioning */
  left: -50px;
}

.policyms-modal > .container > .next {
  /* Positioning */
  right: -50px;
}

/**
* The modal's iterable controls on start or end.
*/
.policyms-modal > .container > .previous:disabled,
.policyms-modal > .container > .next:disabled {
  /* Other */
  cursor: not-allowed;
  opacity: 0.6;
}

/**
* The modal's content box.
*/
.policyms-modal > .container > .content {
  /* Display & Box Model */
  max-height: 90.2vh;
  overflow-x: hidden;
  overflow-y: auto;
  margin: 0;
  background-color: var(--policyms-background-color);
  border-radius: 12px;
  perspective: 1px;
  position: relative;
}

/** 
* Errors & notices
*/

.policyms-error {
  width: 100%;
  max-width: 100%;
  max-height: auto;
  font-weight: bold;
  background-color: salmon;
  color: darkred;
  text-align: center;
  margin: 10px auto !important;
  border-radius: 8px;
  padding: 10px 15px;
  position: relative;
}

.policyms-error.animated,
.policyms-notice.animated {
  animation: show-error 0.2s ease-in-out;
}

.policyms-error.animated.seen,
.policyms-notice.animated.seen {
  max-height: 0;
  padding: 0;
  margin: 0;
  opacity: 0;
  transition: opacity 0.1s, max-height 0.2s, padding 0.2s, margin 0.2s;
}

.policyms-error.animated.seen.dismissed,
.policyms-notice.animated.seen.dismissed {
  display: none;
}

@keyframes show-error {
  0% {
    max-height: 0;
    padding: 0;
    margin: 0;
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  100% {
    max-height: inherit;
    padding: 10px 15px;
    margin: inherit;
    opacity: inherit;
  }
}

.policyms-notice {
  width: 100%;
  max-width: 100%;
  font-weight: bold;
  background-color: var(--policyms-border-color-light);
  text-align: center;
  margin: 25px auto;
  border-radius: 8px;
  padding: 10px 15px;
  position: relative;
}

.policyms-notice p {
  margin: 5px;
}

/**
* Sorting Selectors
* -----------
*/

.policyms-sort-content {
  display: flex;
  justify-content: center;
  align-items: center;
}

.policyms-sort-content > * {
  margin-right: 10px;
}

/**
* Content List
* -----------
* A list with dynamic content.
*/

.policyms-content-list > header {
  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
  width: 100%;
}

.policyms-content-list > header > form {
  margin: 0 10px 0 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

.policyms-content-list > header > form * {
  width: auto;
  height: 100%;
  padding: 0;
  margin: 0 5px;
  white-space: nowrap;
}

.policyms-content-list > header > form select {
  padding: 0 20px 0 12px;
  width: auto;
}

.policyms-content-list > header > a {
  margin: 0 0 2px 0;
}

.policyms-content-list > .policyms-filter-content-list {
  padding: 15px 0;
  border-top: 1px solid var(--policyms-border-color-light);
  border-bottom: 1px solid var(--policyms-border-color-light);
  margin: 20px 0;
  font-size: 75%;
  font-weight: bold;
}

.policyms-content-list > .policyms-filter-content-list > div {
  margin-bottom: 7px;
}

.policyms-content-list > .policyms-filter-content-list button {
  margin: 0 5px 5px 0;
}

.policyms-content-list > ul {
  padding: 0 10px 0 0;
}

@media screen and (max-width: 650px) {
  .policyms-content-list {
    overflow-y: visible;
    max-height: unset;
    padding: 0;
    margin: 0;
  }
}

/**
* Pagination
* -----------
*/

.policyms-pagination {
  width: 100%;
  display: flex;
  justify-content: center;
  align-content: center;
}

/**
* Links input fields
* -----------
* An link title:url grouping.
*/

.policyms-input-fields-grouping > button.add {
  display: block;
  height: auto;
  padding: 3px 5px;
  padding: 0;
  border: none;
  margin: 10px 0;
  background: none !important;
  color: var(--policyms-text-color);
  font-size: 75%;
  line-height: normal;
}

.policyms-input-fields-grouping > button.add:hover {
  cursor: pointer;
  opacity: 0.8;
}

.policyms-input-fields-grouping > .grouping {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

.policyms-input-fields-grouping > .grouping > * {
  display: block;
  height: auto;
  max-height: unset;
  margin: 0 10px 0 0 !important;
}

.policyms-input-fields-grouping > .grouping > input[name="links-title[]"] {
  max-width: 200px;
}

.policyms-input-fields-grouping > .grouping > input[name="links-url[]"] {
  min-width: 225px;
}

.policyms-input-fields-grouping > .grouping > button.remove {
  box-sizing: border-box;
  padding: 0;
  border: none;
  margin: 0 0 0 3px;
  background: none !important;
  color: var(--policyms-text-color) !important;
  transition: opacity 0.2s ease-in-out;
}

.policyms-input-fields-grouping > .grouping > button.remove:hover {
  opacity: 0.8;
  transition: opacity 0.2s ease-in-out;
}

.policyms-input-fields-grouping > .grouping > button.remove:disabled {
  opacity: 0.4;
  cursor: not-allowed;
  transition: opacity 0.2s ease-in-out;
}
