<?php

/**
 * Provide a admin area view for the plugin
 *
 * This file is used to markup the admin-facing aspects of the plugin.
 *
 * @link       https://github.com/alexandrosraikos/policyms/
 * @since      1.0.0
 *
 * @package    PolicyMS
 * @subpackage PolicyMS/admin/partials
 */

function render_settings_page() {   ?>
	<h2>PolicyMS Settings</h2>
	<p>This is the options page for the PolicyMS API.</p>
	<form action="options.php" method="post">
		<?php
		settings_fields( 'policyms_plugin_settings' );
		do_settings_sections( 'policyms_plugin' );
		?>
		<br />
		<input type="submit" name="submit" class="button button-primary" value="<?php esc_attr_e( 'Save' ); ?>" />
	</form>
	<?php
}

function policyms_plugin_section_one() {
	echo '<p>Insert your credentials for the Marketplace API.</p>';
}

function policyms_plugin_host() {
	$options = get_option( 'policyms_plugin_settings' );
	?>
	<input type="text" name="policyms_plugin_settings[marketplace_host]" value="<?php echo ( ( ! empty( $options['marketplace_host'] ) ) ? $options['marketplace_host'] : '' ); ?>" />
	<p>The Marketplace server address endpoint.</p>
	<?php
}

function policyms_plugin_api_access_token() {
	$options = get_option( 'policyms_plugin_settings' );
	?>
	<input type="text" name="policyms_plugin_settings[api_access_token]" value="<?php echo ( ( ! empty( $options['api_access_token'] ) ) ? $options['api_access_token'] : '' ); ?>" />
	<p>The Marketplace server address endpoint.</p>
	<?php
}

function policyms_plugin_jwt_key() {
	$options = get_option( 'policyms_plugin_settings' );
	?>
	<input type="text" name="policyms_plugin_settings[jwt_key]" value="<?php echo ( ( ! empty( $options['jwt_key'] ) ) ? $options['jwt_key'] : '' ); ?>" />
	<p>The Marketplace server token decoding key.</p>
	<?php
}

function policyms_plugin_encryption_key() {
	 $options = get_option( 'policyms_plugin_settings' );
	?>
	<input type="text" id="policyms-encryption-key" name="policyms_plugin_settings[encryption_key]" value="<?php echo ( ( ! empty( $options['encryption_key'] ) ) ? $options['encryption_key'] : '' ); ?>" />
	<button id="policyms-generate-key" class="button button-primary">Generate</button>
	<p>The Marketplace authorization token encryption key. This key must be generated by you and kept security confidential.</p>
	<?php
}

function policyms_plugin_section_two() {
	echo '<p>Select your preferred operating settings.</p>';
}

function policyms_plugin_login_page_selector() {
	$options = get_option( 'policyms_plugin_settings' );
	$pages   = get_pages(
		array(
			'post_status' => 'publish',
		)
	);
	?>
	<select name="policyms_plugin_settings[login_page]">
		<option value="" selected>-</option>
		<?php
		foreach ( $pages as $page ) {
			echo '<option value="' . $page->ID . '" ' . ( ( $options['login_page'] == $page->ID ) ? 'selected' : '' ) . '>' . $page->post_title . '</option>';
		}
		?>
	</select>
	<p>Select the log in page where the "Log In" menu item should redirect.</p>
	<?php
}

function policyms_plugin_registration_page_selector() {
	 $options = get_option( 'policyms_plugin_settings' );
	$pages    = get_pages(
		array(
			'post_status' => 'publish',
		)
	);
	?>
	<select name="policyms_plugin_settings[registration_page]">
		<option value="" selected>-</option>
		<?php
		foreach ( $pages as $page ) {
			echo '<option value="' . ( $page->ID ) . '" ' . ( $options['registration_page'] == ( $page->ID ) ? 'selected' : '' ) . '>' . $page->post_title . '</option>';
		}
		?>
	</select>
	<p>Select the registration page where the "Register" menu item should redirect.</p>
	<?php
}


function policyms_plugin_account_page_selector() {
	$options = get_option( 'policyms_plugin_settings' );
	$pages   = get_pages(
		array(
			'post_status' => 'publish',
		)
	);
	?>
	<select name="policyms_plugin_settings[account_page]">
		<option value="" selected>-</option>
		<?php
		foreach ( $pages as $page ) {
			echo '<option value="' . ( $page->ID ) . '" ' . ( $options['account_page'] == ( $page->ID ) ? 'selected' : '' ) . '>' . $page->post_title . '</option>';
		}
		?>
	</select>
	<p>Select the account page where the "My Account" menu item should redirect.</p>
	<?php
}

function policyms_plugin_menu_selector() {
	$options = get_option( 'policyms_plugin_settings' );
	$menus   = get_registered_nav_menus();
	?>
	<select name="policyms_plugin_settings[selected_menu]">
		<option value="" selected>-</option>
		<?php
		foreach ( $menus as $location => $description ) {
			echo '<option value="' . $location . '" ' . ( $options['selected_menu'] == $location ? 'selected' : '' ) . '>' . $description . '</option>';
		}
		?>
	</select>
	<p>Select the menu where the Log In and Log Out buttons to appear.</p>
	<?php
}

function policyms_plugin_section_three() {
	echo '<p>Select your preferred operating settings.</p>';
}


function policyms_plugin_egi_redirection_page() {
	$options = get_option( 'policyms_plugin_settings' );
	$pages   = get_pages(
		array(
			'post_status' => 'publish',
		)
	);
	?>
	<select name="policyms_plugin_settings[egi_redirection_page]">
		<option value="" selected>-</option>
		<?php
		foreach ( $pages as $page ) {
			echo '<option value="' . ( $page->ID ) . '" ' . ( $options['egi_redirection_page'] == ( $page->ID ) ? 'selected' : '' ) . '>' . $page->post_title . '</option>';
		}
		?>
	</select>
	<p>Select the page where you've inserted the EGI redirection shortcode.</p>
	<?php
}



function policyms_plugin_egi_client_id() {
	$options = get_option( 'policyms_plugin_settings' );
	?>
	<input type="text" name="policyms_plugin_settings[egi_client_id]" value="<?php echo ( ( ! empty( $options['egi_client_id'] ) ) ? $options['egi_client_id'] : '' ); ?>" />
	<p>The Client ID registered with EGI.</p>
	<?php
}



function policyms_plugin_egi_client_secret() {
	$options = get_option( 'policyms_plugin_settings' );
	?>
	<input type="text" name="policyms_plugin_settings[egi_client_secret]" value="<?php echo ( ( ! empty( $options['egi_client_secret'] ) ) ? $options['egi_client_secret'] : '' ); ?>" />
	<p>The client secret provided by EGI.</p>
	<?php
}


function policyms_plugin_egi_code_challenge() {
	 $options = get_option( 'policyms_plugin_settings' );
	?>
	<input type="text" name="policyms_plugin_settings[egi_code_challenge]" value="<?php echo ( ( ! empty( $options['egi_code_challenge'] ) ) ? $options['egi_code_challenge'] : '' ); ?>" />
	<p>An SHA256 encoded code challenge.</p>
	<?php
}


function policyms_plugin_egi_code_verifier() {
	$options = get_option( 'policyms_plugin_settings' );
	?>
	<input type="text" name="policyms_plugin_settings[egi_code_verifier]" value="<?php echo ( ( ! empty( $options['egi_code_verifier'] ) ) ? $options['egi_code_verifier'] : '' ); ?>" />
	<p>An SHA256 code verifier alphanumeric string.</p>
	<?php
}

function policyms_plugin_password_reset_page_selector() {
	$options = get_option( 'policyms_plugin_settings' );
	$pages   = get_pages(
		array(
			'post_status' => 'publish',
		)
	);
	?>
	<select name="policyms_plugin_settings[password_reset_page]">
		<option value="" selected>-</option>
		<?php
		foreach ( $pages as $page ) {
			echo '<option value="' . ( $page->ID ) . '" ' . ( $options['password_reset_page'] == ( $page->ID ) ? 'selected' : '' ) . '>' . $page->post_title . '</option>';
		}
		?>
	</select>
	<p>Select the page where you've inserted the <em>[policyms-user-password-reset]</em> shortcode.</p>
	<?php
}

function policyms_plugin_tos_url() {
	$options = get_option( 'policyms_plugin_settings' );
	?>
	<input type="text" name="policyms_plugin_settings[tos_url]" value="<?php echo ( ( ! empty( $options['tos_url'] ) ) ? $options['tos_url'] : '' ); ?>" />
	<p>The Terms of Use page URL for the registration process.</p>
	<?php
}

function policyms_plugin_description_page_selector() {
	$options = get_option( 'policyms_plugin_settings' );
	$pages   = get_pages(
		array(
			'post_status' => 'publish',
		)
	);
	?>
	<select name="policyms_plugin_settings[description_page]">
		<option value="" selected>-</option>
		<?php
		foreach ( $pages as $page ) {
			echo '<option value="' . ( $page->ID ) . '" ' . ( $options['description_page'] == ( $page->ID ) ? 'selected' : '' ) . '>' . $page->post_title . '</option>';
		}
		?>
	</select>
	<p>Select the page where you've inserted the <em>[policyms-description]</em> shortcode.</p>
	<?php
}

function policyms_plugin_archive_page_selector() {
	$options = get_option( 'policyms_plugin_settings' );
	$pages   = get_pages(
		array(
			'post_status' => 'publish',
		)
	);
	?>
	<select name="policyms_plugin_settings[archive_page]">
		<option value="" selected>-</option>
		<?php
		foreach ( $pages as $page ) {
			echo '<option value="' . ( $page->ID ) . '" ' . ( $options['archive_page'] == ( $page->ID ) ? 'selected' : '' ) . '>' . $page->post_title . '</option>';
		}
		?>
	</select>
	<p>Select the page where you've inserted the <em>[.policyms.descriptions.archive]</em> shortcode.</p>
	<?php
}

function policyms_plugin_upload_page_selector() {
	$options = get_option( 'policyms_plugin_settings' );
	$pages   = get_pages(
		array(
			'post_status' => 'publish',
		)
	);
	?>
	<select name="policyms_plugin_settings[upload_page]">
		<option value="" selected>-</option>
		<?php
		foreach ( $pages as $page ) {
			echo '<option value="' . ( $page->ID ) . '" ' . ( $options['upload_page'] == ( $page->ID ) ? 'selected' : '' ) . '>' . $page->post_title . '</option>';
		}
		?>
	</select>
	<p>Select the page where you've inserted the <em>[policyms-description-creation]</em> shortcode.</p>
	<?php
}
